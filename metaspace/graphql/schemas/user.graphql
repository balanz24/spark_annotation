type User {
  id: ID!
  name: String
  role: String             # null if current user is not allowed to see
  email: String            # null if current user is not allowed to see
  groups: [UserGroup!]     # null if current user is not allowed to see
  primaryGroup: UserGroup  # null if current user is not allowed to see
  projects: [UserProject!] # null if current user is not allowed to see
  apiKey: String           # null if current user is not allowed to see
}

input UpdateUserInput {
  name: String
  role: String
  email: String
  primaryGroupId: ID
}

type Query {
  currentUser: User
  user(userId: ID!): User
  allUsers(query: String=""): [User!]  # For admins
  countUsers: Int!

}

type Mutation {
  updateUser(userId: ID!, update: UpdateUserInput!): User!
  deleteUser(userId: ID!, deleteDatasets: Boolean!): Boolean
  resetUserApiKey(userId: ID!, removeKey: Boolean! = False): User!
}
