---

- name: Install Redis
  become: yes
  apt: name=redis-server state=latest

- name: Make Redis bind to all IPs
  become: yes
  lineinfile:
    dest: /etc/redis/redis.conf
    regexp: ^bind
    line: "bind 0.0.0.0"

- name: Make sure .aws directory exists
  file: path=/home/ubuntu/.aws/
        state=directory mode=0755
        owner=ubuntu group=ubuntu
  when: aws_access_key_id is defined

- name: Put aws credentials file into the home dir
  template: src=aws_credentials.j2
            dest=/home/ubuntu/.aws/credentials mode=0600
            owner=ubuntu group=ubuntu
  when: aws_access_key_id is defined

- name: Create /opt/dev directory
  file: dest=/opt/dev state=directory owner=ubuntu group=ubuntu mode=0700
  become: yes

- name: Install psycopg2 (required by ansible)
  apt: name=python3-psycopg2 state=latest
  become: yes

- name: Create sm postgres user
  postgresql_user: name=sm password={{ sm_postgres_password }} role_attr_flags=CREATEDB
  become: yes
  become_user: postgres

- name: Create sm postgres database
  become: yes
  become_user: postgres
  postgresql_db: name=sm owner=sm encoding=UTF8 template=template0

- name: Create a database schema
  become: yes
  become_user: postgres
  postgresql_schema:
    database: sm
    owner: sm
    name: graphql

- name: Import uuid-ossp extension into sm postgres database
  become: yes
  become_user: postgres
  postgresql_ext: db=sm name=uuid-ossp

- name: Create /opt/data/metaspace directory
  file: dest=/opt/data/metaspace state=directory owner=ubuntu group=ubuntu mode=0700
  become: yes

- name: Create SM ElasticSearch index
  shell: "{{ sm_activate_venv }} && python scripts/manage_es_index.py create --drop"
  args:
    chdir: "{{ sm_home }}"
    executable: /bin/bash
  when: sm_create_es_index


# TODO: The DB schema for this doesn't exist yet, so this will fail.
# WORKAROUND: Skip these steps now, run the sm-graphql TypeORM migrations, then re-provision this step
# Suggested permanent fix: Run `engine/scripts/db_schema.sql` here. However, this will also require updating the
# `graphql/bin/dump_db_schema.js` script to create & populate the TypeORM migrations table, so that TypeORM
# doesn't try to run the migrations later, and conflict with `db_schema.sql`-created tables.
- import_tasks: import_molecular_databases.yml

- import_tasks: import_molecule_images.yml
