---

- name: Install sm-graphql's version of Node.js (if needed)
  # This only installs a new version if there isn't a matching existing version
  shell: "{{ sm_activate_nvm }} || nvm install"
  args:
    chdir: "{{ sm_graphql_home }}"
    executable: /bin/bash

- name: Install sm-graphql dependencies
  shell: "{{ sm_activate_nvm }} && yarn install"
  args:
    chdir: "{{ sm_graphql_home }}"
    executable: /bin/bash

- name: Dereference metadata schema
  shell: "{{ sm_activate_nvm }} && yarn run deref-schema"
  args:
    chdir: "{{ sm_graphql_home }}"
    executable: /bin/bash

- name: Generate binding.ts
  shell: "{{ sm_activate_nvm }} && yarn run gen-binding"
  args:
    chdir: "{{ sm_graphql_home }}"
    executable: /bin/bash

- name: Pull config from the remote host
  fetch: src={{ sm_graphql_home }}/config/config.js.template dest=/tmp/config.js.template
         flat=yes fail_on_missing=yes

- name: Save config as ./config/production.js
  template: src=/tmp/config.js.template dest={{ sm_graphql_home }}/config/production.js
            owner=ubuntu group=ubuntu mode=0600

- name: Make sure folders for images exist
  file:
    path: /opt/data/metaspace/public/{{ item }}
    state: directory
    mode: 0755
  with_items:
     - optical_images
     - raw_optical_images
     - iso_images

- name: Make sure logs directory exists
  file: path={{ sm_graphql_home }}/logs state=directory mode=0755

- name: Copy supervisor config file
  template: src=sm-graphql.supervisor.j2 dest=/etc/supervisor/{{ sm_graphql_app_name }}.supervisor
            mode=0600 owner=ubuntu group=ubuntu

- name: Update and restart supervisor app
  supervisorctl:
    name: "{{ sm_graphql_app_name }}"
    state: restarted
